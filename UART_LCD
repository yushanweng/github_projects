#include "iostm8s103.h"
#include "stm8s_gpio.h"

   
/*旗標*/
unsigned int flag0=0;
unsigned int flag1=0;
unsigned int flag2=0;
unsigned int flag3=0;
unsigned int flag4=0;
unsigned int flag5=0;


unsigned int flag91=0;
unsigned int flag95=0;



unsigned int flag10=0;
unsigned int flag18=0;
unsigned int flag29=0;
unsigned int flag30=0;


unsigned char text1[]="always i loveyou";
unsigned char text2[]="I LOVE MY DEAR S";
unsigned char text3[]="stm8____send_out";
unsigned char text4[]="stm8_stop____out";
unsigned char text5[]="computer--->stm8"; 
unsigned char text6[]="stm8_ooooooooooo";
unsigned char text7[]="stm8_xxxxxxxxxxx"; 

#define IN1        flag91=PA_IDR & 0x08 //a3 0000 1000
/*i2c-所有旗標和暫存器定義*/
//unsigned char text6[]="911 911 911 911 "; 

#define I2C_busy() while((I2C_SR3&0x02)==1); 
#define I2C_start() I2C_CR2|=0x01; 
#define I2C_stop() I2C_CR2|=0x02; 
#define I2C_Ack() I2C_CR2|=0x04; 
#define I2C_NAck() I2C_CR2&=(~0x04); 
#define I2C_addrask (I2C_SR1&0x02) 
#define I2C_SBask (I2C_SR1&0x01) 
#define I2C_TxEask (I2C_SR1&0x80) 
#define I2C_RxNeask (I2C_SR1&0x40) 
#define I2C_BTF (I2C_SR1&0x04) 
#define I2C_BERR_ERR (I2C_SR2&0x01) 
#define I2C_AF_ERR (I2C_SR2&0x04) 
#define I2C_writebyte(x) I2C_DR=x;



unsigned int us;


//延遲時間

void _delay_us(u8 us)//us
{
	while(--us);  
}
void _delay_ms(u8 us)//ms
{
	_delay_us(8000);
}
void _delay_s(u8 us)//s
{
	_delay_ms(1000);
}

void Init_UART(void) 
{ 
/*波特率，9600時，分頻係數=2000000/9600=208
16進制數為00d0，BBR1=0D,BBR2=00
*/
      UART1_BRR2=0x00; //必須先寫  //BRR1 BRR2 各8 bit ,if不夠->divide into two BRR
      UART1_BRR1=0x0d; 
      UART1_CR2=0x2C;//允許接收，發送，開接收中斷  //0010 1100 
} 
	 

//傳送位元
void UART1_sendchar(unsigned char j) 
{ 
      while((UART1_SR & 0x80)==0x00); //1000 0000 TXE=0 還沒傳完,  txe=1 傳完了  //if bit7=1 & 0x80 !=0x00
      UART1_DR=j; //UART1_DR向外傳輸(write), i=UART1_DR; receive (read)
}
void I2C_Inita(void) 
{ 
			CLK_CKDIVR=0x19; //0001 1001 //Bits 4:3  11: fHSI= fHSI RC output/8 //Bits 2:0  001: fCPU=fMASTER/2
			I2C_SR3=0x01;//主模式  //0000 0001
      I2C_FREQR=0x0f;//時鐘1mhz
      I2C_CCRH=0x00; //時鐘控制寄存器高位部分
      I2C_CCRL=0x50; //時鐘控制寄存器低位部分
      I2C_TRISER=0x11; //最大上升時間
      I2C_CR1|=0x01; //產生起始條件
      I2C_Ack(); 
      I2C_CR2|=0x08; //控制寄存器2(I2C_CR2)
} 

void I2C_Starta(void) 
{ 
      I2C_busy(); //如果忙線則循環在此
      I2C_start() ; //設置開始期標
      while(I2C_SBask==0); 
} 

void I2C_SendDAdra(u8 Add) 
{ 
		
		I2C_busy(); //如果忙線則循環在此
      I2C_writebyte(Add);	
			I2C_busy(); //如果忙線則循環在此
			while(I2C_addrask==0);
			I2C_busy();
			
      if(I2C_AF_ERR==1)
		   {
				I2C_stop();
				I2C_busy(); //如果忙線則循環在此
				I2C_writebyte(Add);	
				I2C_busy(); //如果忙線則循環在此
				while(I2C_addrask==0); 
				I2C_busy();
			 }
		  
} 

void I2C_SendData(u8 data) 
{ 
		//I2C_NAck();
		I2C_busy(); //如果忙線則循環在此
		I2C_writebyte(data); 
		I2C_busy() ; 
    while(I2C_TxEask==0); 
		I2C_busy() ;
		if(I2C_AF_ERR==1)
	   {
			I2C_stop();
			I2C_busy(); //如果忙線則循環在此
      I2C_writebyte(data); 
      I2C_busy() ; 
      while(I2C_TxEask==0); 
		  I2C_busy() ;
		 }
		I2C_NAck();
		I2C_stop();
} 

u8 I2C_RcvData(void) 
{
  u8 i; 
  while(I2C_RxNeask==0); 
  abc: 
   if(I2C_BTF==0x04) 
   {
	  i=I2C_DR;
	 } 
   else goto abc; 
	 if(I2C_BTF==0){} 
	 else goto abc; 
	 return i; 
} 

void PCF8574_Inita( void) 
{ 
      I2C_Inita(); 
} 
//對PCF8574位址0x7c寫一個位元組
void PCF8574_WriteAByte(u8 data) 
{ 
      I2C_Starta(); 
		I2C_SendDAdra(0x4e); //位址
		// I2C_SendDAdra(0x7e); //位址
		 I2C_SendData(data); 
      I2C_stop(); 
} 
void LCD_Init(void);
void lcd_send_cmd(char cmd);
void lcd_send_data(char data);
void lcd_send_string (char *str);
void display(int dat);
void STM8_GPIO(void)
{
//PA全部上拉輸入
	PA_DDR = 0x00;//輸入
	PA_CR1 = 0xff;
	PA_CR2 = 0x00;
}

void lcd_send_cmd(char cmd)
	{  
 	char data_u, data_l;
	data_u = cmd&0xf0;//只選擇高半字節   //?  1111 0000
	data_l = (cmd<<4)&0xf0;//只選擇較低的半字節 //? 0000 1111
	/*致能*/
	
	flag1 = data_u|0x0c;  //en=1, (rs=0(只有傳送命令))  //? 0000 1100
	flag2 = data_u|0x08;  //en=0, (rs=0(只有傳送命令))  //? 0000 1000
	flag3 = data_l|0x0c;  //en=1, (rs=0(只有傳送命令))  //?
	flag4 = data_l|0x08;  //en=0, (rs=0(只有傳送命令))  //?
	/*傳送I2C*/
	PCF8574_WriteAByte(flag1) ; 
	PCF8574_WriteAByte(flag2) ;
	PCF8574_WriteAByte(flag3) ;
	PCF8574_WriteAByte(flag4) ;
	}
void lcd_send_data(char data)
	{
	char data_u, data_l;
	data_u = data&0xf0;//只選擇高半字節
	data_l = (data<<4)&0xf0;//只選擇較低的半字節
	/*致能*/
	flag1 = data_u|0x0d;  //en=1, (rs=1(只有傳送資料)) //0000 
	flag2  = data_u|0x09;  //en=0, (rs=1(只有傳送資料))
	flag3 = data_l|0x0d;  //en=1, (rs=1(只有傳送資料))
	flag4 = data_l|0x09;  //en=0, (rs=1(只有傳送資料))
	/*傳送I2C*/
	PCF8574_WriteAByte(flag1) ;
	PCF8574_WriteAByte(flag2) ;
	PCF8574_WriteAByte(flag3) ;
	PCF8574_WriteAByte(flag4) ;
	}

void LCD_Init(void)
	{

	lcd_send_cmd(0x03); //0000 0011
//	_delay_us(10);
for (flag5 = 0; flag5 < 20; flag5++);
	lcd_send_cmd(0x02);
//	_delay_us(10);
for (flag5 = 0; flag5 < 20; flag5++);
	lcd_send_cmd(0x28);
//	_delay_us(10);
for (flag5 = 0; flag5 < 20; flag5++);
	lcd_send_cmd(0x0c);
//	_delay_us(10);
	for (flag5 = 0; flag5 < 20; flag5++);
	lcd_send_cmd(0x01);//清除畫面
//	_delay_us(10);
for (flag5 = 0; flag5 < 20; flag5++);
	lcd_send_cmd(0x02);//清除畫面
//	_delay_us(10);
for (flag5 = 0; flag5 < 20; flag5++);
	}

void lcd_send_string (char *str)
{
	
	while (*str) lcd_send_data (*str++);
	
}

@far @interrupt void UART_RX_IQU (void)
{
	     
			//停止uart發射痔送和接收	
			UART1_CR2=0x00; //0000 0000
			//接收UART傳來值
			for (flag1 = 0; flag1 < 20; flag1++);
			flag3 = UART1_DR;
			if (flag3==0x17) //0001 0111
	   	{
			 lcd_send_cmd(0xc0); //1100 0000
			 lcd_send_string(text5);
			 for (flag1 = 0; flag1 < 40000; flag1++);
			}
	  	UART1_CR2=0x2C;//允許接收，發送，開接收中斷 //0010 1100
}

void main(void) 
{ 
			//lce init
      u8 i=0x4c; //0100 1100  //unsigned 8 bits i
      PCF8574_Inita(); //chip initial 
			LCD_Init();//LCD two types 1602:16 bits two lines ,2004:20 bits four lines
		
			//lce顯示抬頭字串
			lcd_send_cmd(0x80); //1000 0000  show entire line of words: 0x80~0x8f   0x80:address of the first line of LCD 1602
			lcd_send_string(text1);
			/*
			lcd_send_cmd(0x80); //1000 0000  show entire line of words: 0x80~0x8f   
			lcd_send_string(text1_new);
			*/
	 		lcd_send_cmd(0xc0);//0xc0:address of the second line of LCD 1602
			lcd_send_string(text2);
			STM8_GPIO();
			Init_UART();
			//beep=on
			BEEP_CSR=0xef; //1110 1111  Bit 5 BEEPEN: Beep enable 0: Beep disabled
		  //開機延遲
		  for (flag1 = 0; flag1 < 20000; flag1++);
			//beep=off
			BEEP_CSR=0x00; //0000 0000
	
	    rim(); //開啟中斷 
	while (1)
		{
			
				 flag91=0x08; //0000 1000
	IN1;
	if(flag91==0)
	{ 
		flag95=0;
    for (flag29 = 0; flag29 < 1;flag29++)
    {   // small for loop outer
     for (flag30 = 0; flag30 < 8000;flag30++)
      {
			flag91=0x08;
      IN1; //flag91=PA_IDR & 0x08 
      if(flag91==0x08)
       {
        flag95=0x01;
        break;
       }
			}
		}
   if(flag95==0)
   {
		sim();//關閉中斷 //可以不寫這行
    lcd_send_cmd(0xc0); //the second line of LCD 1602
		lcd_send_string(text3); //"stm8____send_out"
		UART1_sendchar(0x10);
		do
		{
		flag91=0x08;
		IN1;
    }		
		while(flag91==0);
		rim(); //開啟中斷
	 }
	}
	else
   {
		sim();//關閉中斷 //可以不寫這行
  	lcd_send_cmd(0xc0); //the second line of LCD 1602
		lcd_send_string(text2); //"I LOVE MY DEAR S"
		rim();//開啟中斷
   }
					
				//	for (flag30 = 0; flag30 < 5000;flag30++);
					
			 }
			/*
			if(flag7==0x01)
			 {
  	        lcd_send_cmd(0xc0);
						lcd_send_string(text2);
			 }
			*/ 
		}	


		 /////////////////////////////
				 //lcd_send_cmd(0xc0);
					//	lcd_send_string(text3);
				//		while(1)
					//  {
					//  }
				 /////////////////////////////		
