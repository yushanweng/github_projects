{"remainingRequest":"/Users/yushan/bootstrap_vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yushan/bootstrap_vue/src/views/Home.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yushan/bootstrap_vue/src/views/Home.vue","mtime":1590741344689},{"path":"/Users/yushan/bootstrap_vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yushan/bootstrap_vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yushan/bootstrap_vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yushan/bootstrap_vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8vIEAgaXMgYW4gYWxpYXMgdG8gL3NyYwppbXBvcnQgSm9iQ2FyZCBmcm9tICdAL2NvbXBvbmVudHMvSm9iQ2FyZC52dWUnCmltcG9ydCB7bWFwR2V0dGVyc30gZnJvbSAidnVleCIKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdIb21lJywKICBjb21wb25lbnRzOiB7J2pvYi1jYXJkJzogSm9iQ2FyZCB9LAogIGNvbXB1dGVkOnsKICAgIC4uLm1hcEdldHRlcnMoWyJqb2JzIiwiZGlzcGxheUpvYnMiLCJyb3dzIl0pCiAgfSwKICBtb3VudGVkKCl7CiAgICB0aGlzLmZldGNoRGF0YSgpCiAgfSwKICBkYXRhKCl7CiAgICByZXR1cm4gewogICAgICAvLyBqb2JzOiBbXSwKICAgICAgLy8gZGlzcGFseUpvYnM6W10sCiAgICAgIGN1cnJlbnRQYWdlOjEsCiAgICAgIC8vIHJvd3M6MSwKICAgICAgcGVyUGFnZTozCiAgICB9CiAgfSwKICBtZXRob2RzOnsKICAgIGFzeW5jIGZldGNoRGF0YSgpewogICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgiZmV0Y2hKb2JzIikKICAgICAgY29uc29sZS5sb2coInRlc3QiLHRoaXMuJHN0b3JlLmdldHRlcnMuam9icykKICAgICAgLy8gY29uc3QgcmVzPWF3YWl0IGZldGNoKCJqb2JzLmpzb24iKQogICAgICAvLyBjb25zdCB2YWw9IGF3YWl0IHJlcy5qc29uKCkKICAgICAgLy8gdGhpcy5qb2JzPXRoaXMuam9icwogICAgICAvLyB0aGlzLmRpc3BhbHlKb2JzPXRoaXMuam9icy5zbGljZSgwLDMpCiAgICAgIC8vIHRoaXMucm93cz10aGlzLmpvYnMubGVuZ3RoCiAgICAgIGNvbnNvbGUubG9nKHRoaXMuam9icykKICAgIH0sCiAgICBwYWdpbmF0ZShjdXJyZW50UGFnZSl7CiAgICAgIC8vIGNvbnN0IHN0YXJ0PShjdXJyZW50UGFnZS0xKSp0aGlzLnBlclBhZ2UKICAgICAgLy8gdGhpcy5kaXNwYWx5Sm9icz10aGlzLmpvYnMuc2xpY2Uoc3RhcnQsIHN0YXJ0KzMpCiAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCJwYWdpbmF0ZSIse2N1cnJlbnRQYWdlLCBwZXJQYWdlOiB0aGlzLnBlclBhZ2V9KQogICAgfQogIH0KfQo="},{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Home.vue","sourceRoot":"src/views","sourcesContent":["<template>\n<b-container>\n  <b-row align-v=\"center\">\n      <job-card v-for=\"job in displayJobs\" :key=\"job.id\" :name=\"job.name\" :id=\"jo\"></job-card>\n      \n    <!-- <b-col md=\"3\">\n      <div>\n  <b-card\n    title=\"Card Title\"\n    img-src=\"https://picsum.photos/600/300/?image=25\"\n    img-alt=\"Image\"\n    img-top\n    tag=\"article\"\n    style=\"max-width: 20rem;\"\n    class=\"mb-2\"\n  >\n    <b-card-text>\n      Some quick example text to build on the card title and make up the bulk of the card's content.\n    </b-card-text>\n\n    <b-button href=\"#\" variant=\"primary\">Go somewhere</b-button>\n  </b-card>\n</div>\n    </b-col>\n    <b-col>2 of 3</b-col>\n    <b-col>3 of 3</b-col>-->\n</b-row>\n<!-- Use text in props -->\n    <b-pagination\n      v-model=\"currentPage\"\n      :total-rows=\"rows\"\n      :per-page=\"perPage\"\n      first-text=\"First\"\n      prev-text=\"Prev\"\n      next-text=\"Next\"\n      last-text=\"Last\"\n      @input=\"paginate(currentPage)\"\n    ></b-pagination>\n</b-container>\n</template> \n\n<script>\n// @ is an alias to /src\nimport JobCard from '@/components/JobCard.vue'\nimport {mapGetters} from \"vuex\"\nexport default {\n  name: 'Home',\n  components: {'job-card': JobCard },\n  computed:{\n    ...mapGetters([\"jobs\",\"displayJobs\",\"rows\"])\n  },\n  mounted(){\n    this.fetchData()\n  },\n  data(){\n    return {\n      // jobs: [],\n      // dispalyJobs:[],\n      currentPage:1,\n      // rows:1,\n      perPage:3\n    }\n  },\n  methods:{\n    async fetchData(){\n      this.$store.dispatch(\"fetchJobs\")\n      console.log(\"test\",this.$store.getters.jobs)\n      // const res=await fetch(\"jobs.json\")\n      // const val= await res.json()\n      // this.jobs=this.jobs\n      // this.dispalyJobs=this.jobs.slice(0,3)\n      // this.rows=this.jobs.length\n      console.log(this.jobs)\n    },\n    paginate(currentPage){\n      // const start=(currentPage-1)*this.perPage\n      // this.dispalyJobs=this.jobs.slice(start, start+3)\n      this.$store.dispatch(\"paginate\",{currentPage, perPage: this.perPage})\n    }\n  }\n}\n</script>\n\n"]}]}