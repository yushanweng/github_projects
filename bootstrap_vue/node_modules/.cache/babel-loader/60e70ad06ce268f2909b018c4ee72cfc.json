{"remainingRequest":"/Users/yushan/bootstrap_vue/node_modules/babel-loader/lib/index.js!/Users/yushan/bootstrap_vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yushan/bootstrap_vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yushan/bootstrap_vue/src/views/Home.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yushan/bootstrap_vue/src/views/Home.vue","mtime":1590741344689},{"path":"/Users/yushan/bootstrap_vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yushan/bootstrap_vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yushan/bootstrap_vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yushan/bootstrap_vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL3l1c2hhbi9ib290c3RyYXBfdnVlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL1VzZXJzL3l1c2hhbi9ib290c3RyYXBfdnVlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8gQCBpcyBhbiBhbGlhcyB0byAvc3JjCmltcG9ydCBKb2JDYXJkIGZyb20gJ0AvY29tcG9uZW50cy9Kb2JDYXJkLnZ1ZSc7CmltcG9ydCB7IG1hcEdldHRlcnMgfSBmcm9tICJ2dWV4IjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdIb21lJywKICBjb21wb25lbnRzOiB7CiAgICAnam9iLWNhcmQnOiBKb2JDYXJkCiAgfSwKICBjb21wdXRlZDogX29iamVjdFNwcmVhZCh7fSwgbWFwR2V0dGVycyhbImpvYnMiLCAiZGlzcGxheUpvYnMiLCAicm93cyJdKSksCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHRoaXMuZmV0Y2hEYXRhKCk7CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgLy8gam9iczogW10sCiAgICAgIC8vIGRpc3BhbHlKb2JzOltdLAogICAgICBjdXJyZW50UGFnZTogMSwKICAgICAgLy8gcm93czoxLAogICAgICBwZXJQYWdlOiAzCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgZmV0Y2hEYXRhOiBmdW5jdGlvbiBmZXRjaERhdGEoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF90aGlzLiRzdG9yZS5kaXNwYXRjaCgiZmV0Y2hKb2JzIik7CgogICAgICAgICAgICAgICAgY29uc29sZS5sb2coInRlc3QiLCBfdGhpcy4kc3RvcmUuZ2V0dGVycy5qb2JzKTsgLy8gY29uc3QgcmVzPWF3YWl0IGZldGNoKCJqb2JzLmpzb24iKQogICAgICAgICAgICAgICAgLy8gY29uc3QgdmFsPSBhd2FpdCByZXMuanNvbigpCiAgICAgICAgICAgICAgICAvLyB0aGlzLmpvYnM9dGhpcy5qb2JzCiAgICAgICAgICAgICAgICAvLyB0aGlzLmRpc3BhbHlKb2JzPXRoaXMuam9icy5zbGljZSgwLDMpCiAgICAgICAgICAgICAgICAvLyB0aGlzLnJvd3M9dGhpcy5qb2JzLmxlbmd0aAoKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKF90aGlzLmpvYnMpOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgcGFnaW5hdGU6IGZ1bmN0aW9uIHBhZ2luYXRlKGN1cnJlbnRQYWdlKSB7CiAgICAgIC8vIGNvbnN0IHN0YXJ0PShjdXJyZW50UGFnZS0xKSp0aGlzLnBlclBhZ2UKICAgICAgLy8gdGhpcy5kaXNwYWx5Sm9icz10aGlzLmpvYnMuc2xpY2Uoc3RhcnQsIHN0YXJ0KzMpCiAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCJwYWdpbmF0ZSIsIHsKICAgICAgICBjdXJyZW50UGFnZTogY3VycmVudFBhZ2UsCiAgICAgICAgcGVyUGFnZTogdGhpcy5wZXJQYWdlCiAgICAgIH0pOwogICAgfQogIH0KfTs="},{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA;AACA,OAAA,OAAA,MAAA,0BAAA;AACA,SAAA,UAAA,QAAA,MAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,MADA;AAEA,EAAA,UAAA,EAAA;AAAA,gBAAA;AAAA,GAFA;AAGA,EAAA,QAAA,oBACA,UAAA,CAAA,CAAA,MAAA,EAAA,aAAA,EAAA,MAAA,CAAA,CADA,CAHA;AAMA,EAAA,OANA,qBAMA;AACA,SAAA,SAAA;AACA,GARA;AASA,EAAA,IATA,kBASA;AACA,WAAA;AACA;AACA;AACA,MAAA,WAAA,EAAA,CAHA;AAIA;AACA,MAAA,OAAA,EAAA;AALA,KAAA;AAOA,GAjBA;AAkBA,EAAA,OAAA,EAAA;AACA,IAAA,SADA,uBACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,KAAA,CAAA,MAAA,CAAA,QAAA,CAAA,WAAA;;AACA,gBAAA,OAAA,CAAA,GAAA,CAAA,MAAA,EAAA,KAAA,CAAA,MAAA,CAAA,OAAA,CAAA,IAAA,EAFA,CAGA;AACA;AACA;AACA;AACA;;AACA,gBAAA,OAAA,CAAA,GAAA,CAAA,KAAA,CAAA,IAAA;;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA,KAVA;AAWA,IAAA,QAXA,oBAWA,WAXA,EAWA;AACA;AACA;AACA,WAAA,MAAA,CAAA,QAAA,CAAA,UAAA,EAAA;AAAA,QAAA,WAAA,EAAA,WAAA;AAAA,QAAA,OAAA,EAAA,KAAA;AAAA,OAAA;AACA;AAfA;AAlBA,CAAA","sourcesContent":["<template>\n<b-container>\n  <b-row align-v=\"center\">\n      <job-card v-for=\"job in displayJobs\" :key=\"job.id\" :name=\"job.name\" :id=\"jo\"></job-card>\n      \n    <!-- <b-col md=\"3\">\n      <div>\n  <b-card\n    title=\"Card Title\"\n    img-src=\"https://picsum.photos/600/300/?image=25\"\n    img-alt=\"Image\"\n    img-top\n    tag=\"article\"\n    style=\"max-width: 20rem;\"\n    class=\"mb-2\"\n  >\n    <b-card-text>\n      Some quick example text to build on the card title and make up the bulk of the card's content.\n    </b-card-text>\n\n    <b-button href=\"#\" variant=\"primary\">Go somewhere</b-button>\n  </b-card>\n</div>\n    </b-col>\n    <b-col>2 of 3</b-col>\n    <b-col>3 of 3</b-col>-->\n</b-row>\n<!-- Use text in props -->\n    <b-pagination\n      v-model=\"currentPage\"\n      :total-rows=\"rows\"\n      :per-page=\"perPage\"\n      first-text=\"First\"\n      prev-text=\"Prev\"\n      next-text=\"Next\"\n      last-text=\"Last\"\n      @input=\"paginate(currentPage)\"\n    ></b-pagination>\n</b-container>\n</template> \n\n<script>\n// @ is an alias to /src\nimport JobCard from '@/components/JobCard.vue'\nimport {mapGetters} from \"vuex\"\nexport default {\n  name: 'Home',\n  components: {'job-card': JobCard },\n  computed:{\n    ...mapGetters([\"jobs\",\"displayJobs\",\"rows\"])\n  },\n  mounted(){\n    this.fetchData()\n  },\n  data(){\n    return {\n      // jobs: [],\n      // dispalyJobs:[],\n      currentPage:1,\n      // rows:1,\n      perPage:3\n    }\n  },\n  methods:{\n    async fetchData(){\n      this.$store.dispatch(\"fetchJobs\")\n      console.log(\"test\",this.$store.getters.jobs)\n      // const res=await fetch(\"jobs.json\")\n      // const val= await res.json()\n      // this.jobs=this.jobs\n      // this.dispalyJobs=this.jobs.slice(0,3)\n      // this.rows=this.jobs.length\n      console.log(this.jobs)\n    },\n    paginate(currentPage){\n      // const start=(currentPage-1)*this.perPage\n      // this.dispalyJobs=this.jobs.slice(start, start+3)\n      this.$store.dispatch(\"paginate\",{currentPage, perPage: this.perPage})\n    }\n  }\n}\n</script>\n\n"],"sourceRoot":"src/views"}]}